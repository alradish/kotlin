FILE: functionReturn.kt
    public final fun <T> R|kotlin/collections/Set.Companion|.buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/Set<T>, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/Set<T>, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
        ^ Unit
    }
    ): R|kotlin/collections/Set<T>| {
        ^buildList R|kotlin/TODO|()
    }
    public final fun <T> R|kotlin/collections/List.Companion|.buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/List<T>, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/List<T>, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
        ^ Unit
    }
    ): R|kotlin/collections/List<T>| {
        ^buildList R|kotlin/TODO|()
    }
    public final class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|A.Companion| {
                super<R|kotlin/Any|>()
            }

            public final fun <T> buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<A, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<A, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
                ^ Unit
            }
            ): R|A| {
                ^buildList R|kotlin/TODO|()
            }

        }

    }
    public final fun foo(): R|kotlin/collections/List<kotlin/Int>| {
        ^foo Q|kotlin/collections/List|.R|/buildList|<R|kotlin/Int|>(Int(3), <L> = buildList@fun R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/List<kotlin/Int>, kotlin/Int>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(1))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(2))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(3))
        }
        )
    }
    public final fun bar(): R|kotlin/collections/List<kotlin/String>| {
        ^bar ERROR_EXPR(Collection literal has no builder for kotlin/collections/List<kotlin/String> in the current scope)
    }
    public final fun <T> bar(): R|kotlin/collections/Set<T>| {
        ^bar ERROR_EXPR(Collection literal has no builder for kotlin/collections/Set<T> in the current scope)
    }
