FILE: typeNotation.kt
    package main

    public final class A : R|kotlin/Any| {
        public constructor(): R|main/A| {
            super<R|kotlin/Any|>()
        }

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|main/A.Companion| {
                super<R|kotlin/Any|>()
            }

        }

    }
    public final operator fun <T> R|main/A.Companion|.get(a: R|T|, b: R|T|, c: R|T|): R|kotlin/collections/List<T>| {
        ^get R|kotlin/collections/listOf|<R|T|>(vararg(R|<local>/a|, R|<local>/b|, R|<local>/c|))
    }
    public final class B : R|kotlin/Any| {
        public constructor(): R|main/B| {
            super<R|kotlin/Any|>()
        }

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|main/B.Companion| {
                super<R|kotlin/Any|>()
            }

        }

    }
    public final fun <T> R|main/B.Companion|.buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<main/B, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<main/B, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
        ^ Unit
    }
    ): R|main/B| {
        ^buildList R|kotlin/TODO|()
    }
    public final class C : R|kotlin/Any| {
        public constructor(): R|main/C| {
            super<R|kotlin/Any|>()
        }

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|main/C.Companion| {
                super<R|kotlin/Any|>()
            }

        }

    }
    public final operator fun <T> R|main/C.Companion|.get(a: R|T|, b: R|T|, c: R|T|): R|kotlin/collections/List<T>| {
        ^get R|kotlin/collections/listOf|<R|T|>(vararg(R|<local>/a|, R|<local>/b|, R|<local>/c|))
    }
    public final fun <T> R|main/C.Companion|.buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<main/C, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<main/C, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
        ^ Unit
    }
    ): R|main/C| {
        ^buildList R|kotlin/TODO|()
    }
    public final fun main(): R|kotlin/Unit| {
        lval a: R|kotlin/collections/List<kotlin/Int>| = Q|main/A|.R|main/get|<R|kotlin/Int|>(Int(1), Int(2), Int(3))
        lval b: R|kotlin/collections/MutableList<kotlin/Int>| = R|kotlin/collections/mutableListOf|<R|kotlin/Int|>()
        lval c: R|kotlin/Int| = R|<local>/b|.R|SubstitutionOverride<kotlin/collections/MutableList.get: R|kotlin/Int|>|(Int(0))
        lval cc: R|kotlin/Int| = R|<local>/b|.R?C|kotlin/collections/MutableList.get|(IntegerLiteral(0), IntegerLiteral(1))
        R|<local>/b|.R|SubstitutionOverride<kotlin/collections/MutableList.set: R|kotlin/Int|>|(Int(0), Int(1))
        lval d: R|main/B| = Q|main/B|.R|main/buildList|<R|kotlin/Int|>(Int(3), <L> = buildList@fun R|kotlin/collections/ListCollectionLiteralBuilder<main/B, kotlin/Int>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(1))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(2))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(3))
        }
        )
        lval e: R|kotlin/collections/List<kotlin/Int>| = Q|main/C|.R|main/get|<R|kotlin/Int|>(Int(1), Int(2), Int(3))
        lval f: R|main/C| = Q|main/C|.R|main/buildList|<R|kotlin/Int|>(Int(4), <L> = buildList@fun R|kotlin/collections/ListCollectionLiteralBuilder<main/C, kotlin/Int>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(1))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(2))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(3))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(4))
        }
        )
    }
