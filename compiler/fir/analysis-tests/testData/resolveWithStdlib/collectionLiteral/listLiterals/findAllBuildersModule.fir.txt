FILE: builders.kt
    package builders

    public final fun <T> R|kotlin/collections/List.Companion|.buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/List<T>, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/List<T>, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
        ^ Unit
    }
    ): R|kotlin/collections/List<T>| {
        ^buildList R|kotlin/TODO|()
    }
    public final class B : R|kotlin/Any| {
        public constructor(): R|builders/B| {
            super<R|kotlin/Any|>()
        }

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|builders/B.Companion| {
                super<R|kotlin/Any|>()
            }

            public final fun <T> buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<builders/B, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<builders/B, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
                ^ Unit
            }
            ): R|builders/B| {
                ^buildList R|kotlin/TODO|()
            }

        }

    }
FILE: main.kt
    package main

    public final fun <T> R|kotlin/collections/Set.Companion|.buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/Set<T>, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/Set<T>, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
        ^ Unit
    }
    ): R|kotlin/collections/Set<T>| {
        ^buildList R|kotlin/TODO|()
    }
    public final class A : R|kotlin/Any| {
        public constructor(): R|main/A| {
            super<R|kotlin/Any|>()
        }

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|main/A.Companion| {
                super<R|kotlin/Any|>()
            }

            public final fun <T> buildList(size: R|kotlin/Int|, init: R|kotlin/collections/ListCollectionLiteralBuilder<main/A, T>.() -> kotlin/Unit| = fun R|kotlin/collections/ListCollectionLiteralBuilder<main/A, T>|.<anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
                ^ Unit
            }
            ): R|main/A| {
                ^buildList R|kotlin/TODO|()
            }

        }

    }
    public final fun f(): R|kotlin/Unit| {
        lval a: R|kotlin/collections/Set<kotlin/Int>| = Q|kotlin/collections/Set|.R|main/buildList|<R|kotlin/Int|>(Int(3), <L> = buildList@fun R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/Set<kotlin/Int>, kotlin/Int>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(1))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(2))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(3))
        }
        )
        lval b: R|kotlin/collections/List<kotlin/Int>| = Q|kotlin/collections/List|.R|builders/buildList|<R|kotlin/Int|>(Int(3), <L> = buildList@fun R|kotlin/collections/ListCollectionLiteralBuilder<kotlin/collections/List<kotlin/Int>, kotlin/Int>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(1))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(2))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(3))
        }
        )
        lval c: R|main/A| = Q|main/A|.R|main/A.Companion.buildList|<R|kotlin/Int|>(Int(3), <L> = buildList@fun R|kotlin/collections/ListCollectionLiteralBuilder<main/A, kotlin/Int>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(1))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(2))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(3))
        }
        )
        lval d: R|builders/B| = Q|builders/B|.R|builders/B.Companion.buildList|<R|kotlin/Int|>(Int(3), <L> = buildList@fun R|kotlin/collections/ListCollectionLiteralBuilder<builders/B, kotlin/Int>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(1))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(2))
            this@R|special/anonymous|.R|SubstitutionOverride<kotlin/collections/ListCollectionLiteralBuilder.add: R|kotlin/Unit|>|(Int(3))
        }
        )
    }
